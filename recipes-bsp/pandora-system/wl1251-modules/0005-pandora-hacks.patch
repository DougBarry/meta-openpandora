From 3d44ad6640036cc610db5a27ae2dbf35fadf29cd Mon Sep 17 00:00:00 2001
From: Grazvydas Ignotas <notasas@gmail.com>
Date: Thu, 11 Mar 2010 18:53:37 +0200
Subject: [PATCH 5/5] pandora hacks

---
 drivers/net/wireless/wl12xx/wl1251_boot.c |    2 +-
 drivers/net/wireless/wl12xx/wl1251_sdio.c |   78 +++++++++++++++++++++++++++++
 2 files changed, 79 insertions(+), 1 deletions(-)

diff --git a/drivers/net/wireless/wl12xx/wl1251_boot.c b/drivers/net/wireless/wl12xx/wl1251_boot.c
index acb3341..5cd3903 100644
--- a/drivers/net/wireless/wl12xx/wl1251_boot.c
+++ b/drivers/net/wireless/wl12xx/wl1251_boot.c
@@ -494,7 +494,7 @@ int wl1251_boot(struct wl1251 *wl)
 		goto out;
 
 	/* 2. start processing NVS file */
-	if (wl->use_eeprom) {
+	if (1) { //wl->use_eeprom) {
 		wl1251_reg_write32(wl, ACX_REG_EE_START, START_EEPROM_MGR);
 		/* Wait for EEPROM NVS burst read to complete */
 		msleep(40);
diff --git a/drivers/net/wireless/wl12xx/wl1251_sdio.c b/drivers/net/wireless/wl12xx/wl1251_sdio.c
index 4df1a20..af7eadd 100644
--- a/drivers/net/wireless/wl12xx/wl1251_sdio.c
+++ b/drivers/net/wireless/wl12xx/wl1251_sdio.c
@@ -22,6 +22,7 @@
 #include <linux/module.h>
 #include <linux/mmc/sdio_func.h>
 #include <linux/mmc/sdio_ids.h>
+#include <linux/irq.h>
 
 #include "wl1251.h"
 
@@ -33,11 +34,14 @@
 #define SDIO_DEVICE_ID_TI_WL1251	0x9066
 #endif
 
+#define USE_GPOIO_IRQ
+
 static struct sdio_func *wl_to_func(struct wl1251 *wl)
 {
 	return wl->if_priv;
 }
 
+#ifndef USE_GPOIO_IRQ
 static void wl1251_sdio_interrupt(struct sdio_func *func)
 {
 	struct wl1251 *wl = sdio_get_drvdata(func);
@@ -47,6 +51,20 @@ static void wl1251_sdio_interrupt(struct sdio_func *func)
 	/* FIXME should be synchronous for sdio */
 	ieee80211_queue_work(wl->hw, &wl->irq_work);
 }
+#else
+static irqreturn_t wl1251_irq(int irq, void *cookie)
+{
+	struct wl1251 *wl;
+
+	wl1251_debug(DEBUG_IRQ, "r IRQ");
+
+	wl = cookie;
+
+	ieee80211_queue_work(wl->hw, &wl->irq_work);
+
+	return IRQ_HANDLED;
+}
+#endif
 
 static const struct sdio_device_id wl1251_devices[] = {
 	{ SDIO_DEVICE(SDIO_VENDOR_ID_TI, SDIO_DEVICE_ID_TI_WL1251) },
@@ -88,6 +106,7 @@ static void wl1251_sdio_read_elp(struct wl1251 *wl, int addr, u32 *val)
 
 	sdio_claim_host(func);
 	*val = sdio_readb(func, addr, &ret);
+	//*val = sdio_readb_ext(func, addr, &ret, 1);
 	sdio_release_host(func);
 
 	if (ret)
@@ -109,8 +128,23 @@ static void wl1251_sdio_write_elp(struct wl1251 *wl, int addr, u32 val)
 
 static void wl1251_sdio_reset(struct wl1251 *wl)
 {
+	extern int sdio_reset_comm(struct mmc_card *card);
+	struct sdio_func *func = wl_to_func(wl);
+	int ret;
+
+	sdio_claim_host(func);
+	sdio_reset_comm(func->card);
+	ret = sdio_enable_func(func);
+	if (ret)
+		goto release;
+
+	sdio_set_block_size(func, 512);
+
+release:
+	sdio_release_host(func);
 }
 
+#ifndef USE_GPOIO_IRQ
 static void wl1251_sdio_enable_irq(struct wl1251 *wl)
 {
 	struct sdio_func *func = wl_to_func(wl);
@@ -128,9 +162,31 @@ static void wl1251_sdio_disable_irq(struct wl1251 *wl)
 	sdio_release_irq(func);
 	sdio_release_host(func);
 }
+#else
+static void wl1251_gpio_enable_irq(struct wl1251 *wl)
+{
+	return enable_irq(wl->irq);
+}
+
+static void wl1251_gpio_disable_irq(struct wl1251 *wl)
+{
+	return disable_irq(wl->irq);
+}
+#endif
+
+/* Pandora hacks */
+#include <linux/gpio.h>
+
+#define PANDORA_WIFI_IRQ OMAP_GPIO_IRQ(21)
+#define PANDORA_WIFI_GPIO 23
 
 static void wl1251_sdio_set_power(bool enable)
 {
+	gpio_set_value(PANDORA_WIFI_GPIO, enable ? 1 : 0);
+	wl1251_notice("nReset: %d", enable ? 1 : 0);
+
+	if (enable)
+		mdelay(30);
 }
 
 static const struct wl1251_if_operations wl1251_sdio_ops = {
@@ -139,8 +195,13 @@ static const struct wl1251_if_operations wl1251_sdio_ops = {
 	.write_elp = wl1251_sdio_write_elp,
 	.read_elp = wl1251_sdio_read_elp,
 	.reset = wl1251_sdio_reset,
+#ifndef USE_GPOIO_IRQ
 	.enable_irq = wl1251_sdio_enable_irq,
 	.disable_irq = wl1251_sdio_disable_irq,
+#else
+	.enable_irq = wl1251_gpio_enable_irq,
+	.disable_irq = wl1251_gpio_disable_irq,
+#endif
 };
 
 static int wl1251_sdio_probe(struct sdio_func *func,
@@ -168,6 +229,19 @@ static int wl1251_sdio_probe(struct sdio_func *func,
 	wl->if_ops = &wl1251_sdio_ops;
 	wl->set_power = wl1251_sdio_set_power;
 
+#ifdef USE_GPOIO_IRQ
+	wl->irq = PANDORA_WIFI_IRQ;
+	ret = request_irq(wl->irq, wl1251_irq, 0, DRIVER_NAME, wl);
+	if (ret < 0) {
+		wl1251_error("request_irq() failed: %d", ret);
+		goto disable;
+	}
+
+	set_irq_type(wl->irq, IRQ_TYPE_EDGE_RISING);
+
+	disable_irq(wl->irq);
+#endif
+
 	sdio_release_host(func);
 	ret = wl1251_init_ieee80211(wl);
 	if (ret)
@@ -188,6 +262,10 @@ static void __devexit wl1251_sdio_remove(struct sdio_func *func)
 {
 	struct wl1251 *wl = sdio_get_drvdata(func);
 
+#ifdef USE_GPOIO_IRQ
+	free_irq(wl->irq, wl);
+#endif
+
 	wl1251_free_hw(wl);
 
 	sdio_claim_host(func);
-- 
1.6.3.3


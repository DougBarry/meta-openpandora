From 290a8f3391b8aec1ffe9e15b12f6534b8288dc1f Mon Sep 17 00:00:00 2001
From: David-John Willis <John.Willis@Distant-earth.com>
Date: Thu, 23 Apr 2009 20:12:37 +0100
Subject: [PATCH 3/5] Merge in latest wireless ext. hacks.
 e	CUDK/CLI/console.d

---
 sta_dk_4_0_4_32/pform/common/inc/osUtil.h  |    3 +
 sta_dk_4_0_4_32/pform/common/src/osUtil.c  |   50 ++++++++
 sta_dk_4_0_4_32/pform/linux/src/iw_ioctl.c |  188 +++++++++++++++-------------
 3 files changed, 155 insertions(+), 86 deletions(-)
 mode change 100644 => 100755 sta_dk_4_0_4_32/pform/common/inc/osUtil.h
 mode change 100644 => 100755 sta_dk_4_0_4_32/pform/common/src/osUtil.c

diff --git a/sta_dk_4_0_4_32/pform/common/inc/osUtil.h b/sta_dk_4_0_4_32/pform/common/inc/osUtil.h
old mode 100644
new mode 100755
index e7a0de8..a78fb3a
--- a/sta_dk_4_0_4_32/pform/common/inc/osUtil.h
+++ b/sta_dk_4_0_4_32/pform/common/inc/osUtil.h
@@ -335,4 +335,7 @@ VOID UtilPltRxTxCalCB(TI_HANDLE hAdapter,TI_STATUS status,PUINT8 pReadBuff);
 ULONG UtilPltRxCal(PTIWLN_ADAPTER_T pAdapter, PUCHAR pData, PULONG pOutLength, ULONG InLength);
 ULONG utilRxCalibrationStatus(PTIWLN_ADAPTER_T pAdapter, PUCHAR pData, PULONG pOutLength, ULONG InLength);
  
+ULONG UtilWepKeyGet (PTIWLN_ADAPTER_T pAdapter, PUCHAR pData, ULONG Length);
+ULONG UtilDesiredRatesSet (PTIWLN_ADAPTER_T pAdapter, PUCHAR pData, ULONG Length);
+
 #endif		/*__OSUTIL_H_*/
diff --git a/sta_dk_4_0_4_32/pform/common/src/osUtil.c b/sta_dk_4_0_4_32/pform/common/src/osUtil.c
old mode 100644
new mode 100755
index 757c443..6e836e6
--- a/sta_dk_4_0_4_32/pform/common/src/osUtil.c
+++ b/sta_dk_4_0_4_32/pform/common/src/osUtil.c
@@ -5588,3 +5588,53 @@ ULONG utilRxCalibrationStatus(
 
     return status;
 }
+
+ULONG
+UtilWepKeyGet (
+   PTIWLN_ADAPTER_T pAdapter,
+   PUCHAR pData,
+   ULONG Length)
+{
+    securityKeys_t       rsnkey;
+    securityKeys_t       *wkey;
+    paramInfo_t          Param;
+    TI_STATUS            status;
+
+    wkey  = (securityKeys_t *)pData;
+
+    /* Fill Param fields and get the 802_11 capability information */
+    Param.paramType   = RSN_KEY_PARAM;
+    Param.paramLength = Length;
+    rsnkey.keyIndex = wkey->keyIndex;
+    Param.content.pRsnKey = &rsnkey;
+
+    status = configMgr_getParam(pAdapter->CoreHalCtx, &Param);
+
+    if(status != OK)
+        return NOK;
+
+        printk("UtilWepKeyGet 1 KeyIndex  %x , keyLength=%d\n",
+             Param.content.pRsnKey->keyIndex, Param.content.pRsnKey->encLen);
+        NdisMoveMemory(wkey, Param.content.pRsnKey, sizeof(securityKeys_t));
+        printk("UtilWepKeyGet 2 KeyIndex  %x , keyLength=%d\n",
+             wkey->keyIndex, wkey->encLen);
+    return status;
+}
+
+ULONG
+UtilDesiredRatesSet(
+        PTIWLN_ADAPTER_T pAdapter,
+        PUCHAR pData,
+        ULONG Length
+        )
+{
+        UCHAR rate;
+    ULONG retValue;
+
+        rate = (UCHAR) *(PULONG)pData;
+
+        retValue = UtilSetParam(pAdapter, SITE_MGR_DESIRED_TX_RATE_PARAM, (PUCHAR)&rate, sizeof(UCHAR));
+
+        return retValue;
+
+}
diff --git a/sta_dk_4_0_4_32/pform/linux/src/iw_ioctl.c b/sta_dk_4_0_4_32/pform/linux/src/iw_ioctl.c
index 3b02424..a38efc9 100755
--- a/sta_dk_4_0_4_32/pform/linux/src/iw_ioctl.c
+++ b/sta_dk_4_0_4_32/pform/linux/src/iw_ioctl.c
@@ -1,9 +1,33 @@
-/* ioctl() (mostly Linux Wireless Extensions) routines for TI 1251 driver */
-
+/*
+ *  Copyright (C) 2009 John Willis
+ *  Copyright (C) 2008 Texas Instruments/Jorjin Technologies inc.
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ *  GNU General Public License for more details.
+ *
+ *
+ * This file implements support for Linux Wireless Extensions for TI 1251 driver.
+ *
+ */
+
+#include <linux/ctype.h>
+#include <linux/delay.h>
+#include <linux/if.h>
 #include <linux/if_arp.h>
 #include <linux/wireless.h>
+#include <linux/bitops.h>
+
 #include <net/iw_handler.h>
 #include <net/ieee80211.h>
+
+#include "iw_ioctl.h"
 #include "osAdapter.h"
 #include "tiioctl.h"
 #include "paramOut.h"
@@ -102,7 +126,7 @@ static int iw_get_name(struct net_device *dev,
 #if IOCTL_DBG
 	printk("%s Call\n", __FUNCTION__);
 #endif
-/*	
+/*
 	u8 rates[10];
 	int len, i, over2 = 0;
 
@@ -127,7 +151,7 @@ static int iw_ioctl_siwencode(struct net_device *dev,
 	PTIWLN_ADAPTER_T pAdapter = &(((tiwlan_net_dev_t *)(dev->priv))->adapter);
 	cipherSuite_e 	cipher;
 	int i;
-	ULONG len; 
+	ULONG len;
 
 #if IOCTL_DBG
 	printk("%s Call\n", __FUNCTION__);
@@ -146,7 +170,7 @@ static int iw_ioctl_siwencode(struct net_device *dev,
 		return -EINVAL;
 
 	UtilWepStatusGet(pAdapter, (UINT8 *)&cipher, &len);
-	
+
 	if (erq->flags & IW_ENCODE_DISABLED) {
 		cipherSuite_e val=RSN_CIPHER_NONE;
 		UtilWepStatusSet(pAdapter, (UINT8 *)&val, sizeof(val));
@@ -157,10 +181,10 @@ static int iw_ioctl_siwencode(struct net_device *dev,
 		if (erq->length > 0) {
 			OS_802_11_WEP wep;
 			int len = erq->length <= 5 ? 5 : 13;
-			
+
 			cipherSuite_e val=RSN_CIPHER_WEP;
 			UtilWepStatusSet(pAdapter, (UINT8 *)&val, sizeof(val));
-			
+
 			if (len > erq->length)
 				memset(keybuf + erq->length, 0, len - erq->length);
 			memcpy(wep.KeyMaterial, keybuf, len);
@@ -172,7 +196,7 @@ static int iw_ioctl_siwencode(struct net_device *dev,
 			/* No key data - just set the default TX key index */
 			securityKeys_t key;
 			UINT8 data[5];
-			
+
 			memset(&key, 0, sizeof(securityKeys_t));
 			key.keyIndex = i;
 			if (!UtilWepKeyGet(pAdapter, (UINT8 *)&key, sizeof(securityKeys_t)))
@@ -189,13 +213,13 @@ static int iw_ioctl_siwencode(struct net_device *dev,
 					}
 				}
 				else
-					return -EINVAL;				
+					return -EINVAL;
 			}
 			else
 				return -EINVAL;
 		}
 	}
-done:	
+done:
 	if (erq->flags & IW_ENCODE_OPEN)
 	{
 		UINT8 MixedMode = true;
@@ -255,7 +279,7 @@ static int iw_ioctl_giwencode(struct net_device *dev,
 		wkey.keyIndex = i;
 		if (!UtilWepKeyGet(pAdapter, (PUCHAR)&wkey, sizeof(securityKeys_t)))
 		{
-        	printk("iw_ioctl_giwencode KeyIndex  %x , keyLength=%d\n", 
+        	printk("iw_ioctl_giwencode KeyIndex  %x , keyLength=%d\n",
                       wkey.keyIndex, wkey.encLen);
 			if (wkey.encLen > 0)
 			{
@@ -286,8 +310,8 @@ static int iw_ioctl_giwencode(struct net_device *dev,
 		erq->flags |= IW_ENCODE_OPEN;
 	else
 		erq->flags |= IW_ENCODE_RESTRICTED;
-		
-	
+
+
 	return 0;
 }
 
@@ -297,7 +321,7 @@ static int iw_ioctl_siwrate(struct net_device *dev,
 {
 	PTIWLN_ADAPTER_T pAdapter = &(((tiwlan_net_dev_t *)(dev->priv))->adapter);
 	u32 val;
-	
+
 #if IOCTL_DBG
 	printk("%s Call\n", __FUNCTION__);
 #endif
@@ -305,7 +329,7 @@ static int iw_ioctl_siwrate(struct net_device *dev,
 		val = 0;
 	else
 		val = (rrq->value*2/1000000);
-	
+
 	return UtilDesiredRatesSet(pAdapter, (UINT8 *)&val, 4);
 }
 
@@ -343,7 +367,7 @@ static int iw_ioctl_giwaplist(struct net_device *dev,
 				  struct iw_request_info *info,
 				  struct iw_point *data, char *extra)
 {
-	
+
 #if 1
 	PTIWLN_ADAPTER_T pAdapter = &(((tiwlan_net_dev_t *)(dev->priv))->adapter);
 	struct sockaddr addr[IW_MAX_AP];
@@ -353,7 +377,7 @@ static int iw_ioctl_giwaplist(struct net_device *dev,
 	OS_802_11_BSSID_EX *bssid;
 	OS_802_11_BSSID_LIST_EX *list;
 	int i;
-	
+
 #if IOCTL_DBG
 	printk("%s Call\n", __FUNCTION__);
 #endif
@@ -366,9 +390,9 @@ static int iw_ioctl_giwaplist(struct net_device *dev,
     printk("bssid 0x%x\n",bssid);
     number_items = list->NumberOfItems;
     printk("number_items 0x%x\n",number_items);
-    
+
 	data->length = number_items;
-	
+
 	for (i=0;i<number_items;i++)
 	{
 		addr[i].sa_family = ARPHRD_ETHER;
@@ -380,7 +404,7 @@ static int iw_ioctl_giwaplist(struct net_device *dev,
 		qual[i].updated = 7;
         bssid = (OS_802_11_BSSID_EX *) (((char *) bssid) + bssid->Length);
 	}
-	
+
 	memcpy(extra, &addr, sizeof(addr[0]) * data->length);
 	data->flags = 1; /* has quality information */
 	memcpy(extra + sizeof(addr[0]) * data->length, &qual,
@@ -409,7 +433,7 @@ static int iw_ioctl_siwrts(struct net_device *dev,
 		val = rts->value;
 
 	UtilRtsThresholdSet(pAdapter, (UINT8 *)&val, 4);
-	
+
 	return 0;
 }
 
@@ -530,7 +554,7 @@ static int iw_ioctl_siwfreq(struct net_device *dev,
 #endif
 	if (freq->m == -1)
 		return -EOPNOTSUPP;
-		
+
 	/* freq => chan. */
 	if (freq->e == 1 &&
 	    freq->m / 100000 >= freq_list[0] &&
@@ -578,7 +602,7 @@ static int iw_ioctl_giwfreq(struct net_device *dev,
 static int iw_ioctl_siwessid(struct net_device *dev,
 				 struct iw_request_info *info,
 				 struct iw_point *data, char *ssid)
-{	
+{
 	PTIWLN_ADAPTER_T pAdapter = &(((tiwlan_net_dev_t *)(dev->priv))->adapter);
 	OS_802_11_SSID essid;
 	OS_802_11_MAC_ADDRESS bssid = { 0xff,0xff,0xff,0xff,0xff,0xff };
@@ -616,7 +640,7 @@ static int iw_ioctl_giwessid(struct net_device *dev,
 	UtilGetSSID(pAdapter, (UINT8 *)&ssid, &len);
 	data->length = ssid.SsidLength;
 	memcpy(essid, ssid.Ssid, ssid.SsidLength);
-	
+
 	return 0;
 }
 
@@ -647,9 +671,9 @@ static int iw_ioctl_siwmode(struct net_device *dev,
 	default:
 		val = 1;
 	}
-	
+
     UtilInfrastructureModeSet(pAdapter, (UINT8 *)&val, 4);
-    
+
 	return 0;
 }
 
@@ -816,7 +840,7 @@ static int iw_ioctl_siwpower(struct net_device *dev,
 {
 	PTIWLN_ADAPTER_T pAdapter = &(((tiwlan_net_dev_t *)(dev->priv))->adapter);
 	UINT32 val=POWER_MODE_ACTIVE;
-	
+
 #if IOCTL_DBG
 	printk("%s Call\n", __FUNCTION__);
 #endif
@@ -855,12 +879,12 @@ static int iw_ioctl_giwpower(struct net_device *dev,
 {
 	PTIWLN_ADAPTER_T pAdapter = &(((tiwlan_net_dev_t *)(dev->priv))->adapter);
 	UINT32 val=POWER_MODE_ACTIVE, len;
-	
+
 #if IOCTL_DBG
 	printk("%s Call\n", __FUNCTION__);
 #endif
 	UtilPowerModeGet(pAdapter, (UINT8 *)&val, &len);
-	
+
 	if (val==POWER_MODE_ACTIVE) {
 		rrq->disabled = 1;
 		return 0;
@@ -877,7 +901,7 @@ static int iw_ioctl_siwretry(struct net_device *dev,
 				 struct iw_param *rrq, char *extra)
 {
 	PTIWLN_ADAPTER_T pAdapter = &(((tiwlan_net_dev_t *)(dev->priv))->adapter);
-	
+
 #if IOCTL_DBG
 	printk("%s Call\n", __FUNCTION__);
 #endif
@@ -906,11 +930,11 @@ static int iw_ioctl_giwretry(struct net_device *dev,
 	PTIWLN_ADAPTER_T pAdapter = &(((tiwlan_net_dev_t *)(dev->priv))->adapter);
 	u16 shortretry, longretry;
 	ULONG len;
-	
+
 #if IOCTL_DBG
 	printk("%s Call\n", __FUNCTION__);
 #endif
-	if (UtilShortRetryGet(pAdapter, (UINT8 *)&shortretry, &len)!=0 || 
+	if (UtilShortRetryGet(pAdapter, (UINT8 *)&shortretry, &len)!=0 ||
 		UtilLongRetryGet(pAdapter, (UINT8 *)&longretry, &len)!=0)
 		return -EINVAL;
 
@@ -972,12 +996,12 @@ static int iw_ioctl_siwscan(struct net_device *dev,
 #endif
 	PTIWLN_ADAPTER_T pAdapter = &(((tiwlan_net_dev_t *)(dev->priv))->adapter);
 	int ret;
-	
+
 	scan_TimeStamp = jiffies;
 	init_scan_params();
-	
+
 	ret = UtilStartAppScanSet(pAdapter, (PCHAR)&iw_appScanParams, sizeof(iw_appScanParams));
-	
+
 	return ret;
 }
 
@@ -1002,7 +1026,7 @@ static inline int iw_scan_list(struct net_device *dev,
 	int chan;
 	u8 *pos;
 	spinlock_t lock;
-	
+
 #if IOCTL_DBG
 	printk("%s Call\n", __FUNCTION__);
 #endif
@@ -1012,7 +1036,7 @@ static inline int iw_scan_list(struct net_device *dev,
     list = (OS_802_11_BSSID_LIST_EX *) list_buf;
     bssid = &list->Bssid[0];
     number_items = list->NumberOfItems;
-    
+
 	spin_lock_bh(&lock);
 	for (i=0;i<number_items;i++)
 	{
@@ -1021,31 +1045,31 @@ static inline int iw_scan_list(struct net_device *dev,
 		iwe.u.ap_addr.sa_family = ARPHRD_ETHER;
 		memcpy(iwe.u.ap_addr.sa_data, bssid->MacAddress, ETH_ALEN);
 		iwe.len = IW_EV_ADDR_LEN;
-		current_ev = iwe_stream_add_event(current_ev, end_buf, &iwe,
+		current_ev = iwe_stream_add_event(info, current_ev, end_buf, &iwe,
 						  IW_EV_ADDR_LEN);
-						  
+
 		memset(&iwe, 0, sizeof(iwe));
 		iwe.cmd = SIOCGIWESSID;
 		iwe.u.data.length = bssid->Ssid.SsidLength;
 		iwe.u.data.flags = 1;
 		iwe.len = IW_EV_POINT_LEN + iwe.u.data.length;
 //		printk("essid=%s len=%d\n", bssid->Ssid.Ssid, bssid->Ssid.SsidLength);
-		current_ev = iwe_stream_add_point(current_ev, end_buf, &iwe, (char *)bssid->Ssid.Ssid);
-							  
+		current_ev = iwe_stream_add_point(info, current_ev, end_buf, &iwe, (char *)bssid->Ssid.Ssid);
+
 		memset(&iwe, 0, sizeof(iwe));
 		iwe.cmd = SIOCGIWMODE;
 		capabilities = bssid->Union.Capabilities;
-		if (capabilities & (WLAN_CAPABILITY_BSS |
+		if (capabilities & (WLAN_CAPABILITY_ESS |
 				    WLAN_CAPABILITY_IBSS)) {
-			if (capabilities & WLAN_CAPABILITY_BSS)
+			if (capabilities & WLAN_CAPABILITY_ESS)
 				iwe.u.mode = IW_MODE_MASTER;
 			else
 				iwe.u.mode = IW_MODE_ADHOC;
 			iwe.len = IW_EV_UINT_LEN;
-			current_ev = iwe_stream_add_event(current_ev, end_buf, &iwe,
+			current_ev = iwe_stream_add_event(info, current_ev, end_buf, &iwe,
 							  IW_EV_UINT_LEN);
 		}
-		
+
 		memset(&iwe, 0, sizeof(iwe));
 		iwe.cmd = SIOCGIWFREQ;
 		chan = bssid->Configuration.Union.channel;
@@ -1053,10 +1077,10 @@ static inline int iw_scan_list(struct net_device *dev,
 			iwe.u.freq.m = chan;
 			iwe.u.freq.e = 1;
 			iwe.len = IW_EV_FREQ_LEN;
-			current_ev = iwe_stream_add_event(current_ev, end_buf, &iwe,
+			current_ev = iwe_stream_add_event(info, current_ev, end_buf, &iwe,
 							  IW_EV_FREQ_LEN);
 		}
-		
+
 		memset(&iwe, 0, sizeof(iwe));
 		iwe.cmd = IWEVQUAL;
 		iwe.u.qual.qual = bssid->Rssi;
@@ -1066,7 +1090,7 @@ static inline int iw_scan_list(struct net_device *dev,
 				| IW_QUAL_NOISE_UPDATED
 				| IW_QUAL_QUAL_INVALID;
 		iwe.len = IW_EV_QUAL_LEN;
-		current_ev = iwe_stream_add_event(current_ev, end_buf, &iwe,
+		current_ev = iwe_stream_add_event(info, current_ev, end_buf, &iwe,
 						  IW_EV_QUAL_LEN);
 
 		memset(&iwe, 0, sizeof(iwe));
@@ -1077,8 +1101,8 @@ static inline int iw_scan_list(struct net_device *dev,
 			iwe.u.data.flags = IW_ENCODE_DISABLED;
 		iwe.u.data.length = 0;
 		iwe.len = IW_EV_POINT_LEN + iwe.u.data.length;
-		current_ev = iwe_stream_add_point(current_ev, end_buf, &iwe, "");
-		
+		current_ev = iwe_stream_add_point(info, current_ev, end_buf, &iwe, "");
+
 		/* TODO: add SuppRates into BSS table */
 		memset(&iwe, 0, sizeof(iwe));
 		iwe.cmd = SIOCGIWRATE;
@@ -1090,20 +1114,20 @@ static inline int iw_scan_list(struct net_device *dev,
 			/* Bit rate given in 500 kb/s units (+ 0x80) */
 			iwe.u.bitrate.value = ((pos[j] & 0x7f) * 500000);
 			current_val = iwe_stream_add_value(
-				current_ev, current_val, end_buf, &iwe,
+				info, current_ev, current_val, end_buf, &iwe,
 				IW_EV_PARAM_LEN);
 		}
 		/* Check if we added any event */
 		if ((current_val - current_ev) > IW_EV_LCP_LEN)
 			current_ev = current_val;
-	
+
 		/* TODO: add BeaconInt,resp_rate,atim into BSS table */
 		memset(&iwe, 0, sizeof(iwe));
 		iwe.cmd = IWEVCUSTOM;
 		sprintf(buf, "bcn_int=%d",
 			bssid->Configuration.BeaconPeriod);
 		iwe.u.data.length = strlen(buf);
-		current_ev = iwe_stream_add_point(current_ev, end_buf, &iwe,
+		current_ev = iwe_stream_add_point(info, current_ev, end_buf, &iwe,
 						  buf);
 
 		if (capabilities & WLAN_CAPABILITY_IBSS) {
@@ -1111,29 +1135,29 @@ static inline int iw_scan_list(struct net_device *dev,
 			iwe.cmd = IWEVCUSTOM;
 			sprintf(buf, "atim=%d", bssid->Configuration.ATIMWindow);
 			iwe.u.data.length = strlen(buf);
-			current_ev = iwe_stream_add_point(current_ev, end_buf,
+			current_ev = iwe_stream_add_point(info, current_ev, end_buf,
 							  &iwe, buf);
 		}
-		
+
 #if 1
 		IELen = 0;
         IELen += sizeof(OS_802_11_FIXED_IEs);
         pVarIes = (OS_802_11_VARIABLE_IEs*)&bssid->IEs[IELen];
 		while (IELen < bssid->IELength)
 		{
-//			printk("IELen=%d pVarIes->ElementID=%d\n", IELen, pVarIes->ElementID);                
+//			printk("IELen=%d pVarIes->ElementID=%d\n", IELen, pVarIes->ElementID);
 			if (pVarIes->ElementID == MFIE_TYPE_RSN || pVarIes->ElementID == MFIE_TYPE_GENERIC) {
 				memset(&iwe, 0, sizeof(iwe));
 				iwe.cmd = IWEVGENIE;
 				iwe.u.data.length = pVarIes->Length;
 				current_ev = iwe_stream_add_point(
-					current_ev, end_buf, &iwe, (char *)pVarIes);
+					info, current_ev, end_buf, &iwe, (char *)pVarIes);
 			}
-		
-            IELen += (pVarIes->Length + 2);		
+
+            IELen += (pVarIes->Length + 2);
         	pVarIes = (OS_802_11_VARIABLE_IEs*)&bssid->IEs[IELen];
 		}
-#endif        
+#endif
 		if ((end_buf - current_ev) <= IW_EV_ADDR_LEN) {
 			/* Ask user space to try again with a bigger buffer */
 			spin_unlock_bh(&lock);
@@ -1142,7 +1166,7 @@ static inline int iw_scan_list(struct net_device *dev,
 //		printk("current_ev=%x\n", current_ev);
         bssid = (OS_802_11_BSSID_EX *) (((char *) bssid) + bssid->Length);
 	}
-	
+
 	spin_unlock_bh(&lock);
 	return current_ev - extra;
 }
@@ -1462,7 +1486,7 @@ static int iw_ioctl_siwauth(struct net_device *dev,
 	}
 	return 0;
 #endif
-	return -EOPNOTSUPP;	
+	return -EOPNOTSUPP;
 }
 
 
@@ -1505,7 +1529,7 @@ static int iw_ioctl_giwauth(struct net_device *dev,
 	}
 	return 0;
 #endif
-	return -EOPNOTSUPP;	
+	return -EOPNOTSUPP;
 }
 
 
@@ -1517,7 +1541,7 @@ static int iw_ioctl_siwencodeext(struct net_device *dev,
 #if IOCTL_DBG
 	printk("%s Call\n", __FUNCTION__);
 #endif
-#if 0	
+#if 0
 	struct hostap_interface *iface = dev->priv;
 	local_info_t *local = iface->local;
 	struct iw_encode_ext *ext = (struct iw_encode_ext *) extra;
@@ -1683,7 +1707,7 @@ static int iw_ioctl_siwencodeext(struct net_device *dev,
 
 	return ret;
 #endif
-	return -EOPNOTSUPP;	
+	return -EOPNOTSUPP;
 }
 
 
@@ -1694,7 +1718,7 @@ static int iw_ioctl_giwencodeext(struct net_device *dev,
 #if IOCTL_DBG
 	printk("%s Call\n", __FUNCTION__);
 #endif
-#if 0	
+#if 0
 	struct hostap_interface *iface = dev->priv;
 	local_info_t *local = iface->local;
 	struct prism2_crypt_data **crypt;
@@ -1759,7 +1783,7 @@ static int iw_ioctl_giwencodeext(struct net_device *dev,
 
 	return 0;
 #endif
-	return -EOPNOTSUPP;		
+	return -EOPNOTSUPP;
 }
 #endif /* WIRELESS_EXT > 17 */
 
@@ -1813,31 +1837,25 @@ static const iw_handler ti_handler[] =
 	(iw_handler) iw_ioctl_giwmode,			/* SIOCGIWMODE */
 	(iw_handler) iw_ioctl_siwsens,			/* SIOCSIWSENS */
 	(iw_handler) iw_ioctl_giwsens,			/* SIOCGIWSENS */
-	(iw_handler) NULL /* not used */,		/* SIOCSIWRANGE */
+	(iw_handler) NULL,						/* SIOCSIWRANGE */
 	(iw_handler) iw_ioctl_giwrange,			/* SIOCGIWRANGE */
-	(iw_handler) NULL /* not used */,		/* SIOCSIWPRIV */
-	(iw_handler) NULL /* kernel code */,	/* SIOCGIWPRIV */
-	(iw_handler) NULL /* not used */,		/* SIOCSIWSTATS */
-	(iw_handler) NULL /* kernel code */,	/* SIOCGIWSTATS */
-#if WIRELESS_EXT > 15
-	(iw_handler) NULL,						/* SIOCSIWSPY */
-	(iw_handler) NULL,						/* SIOCGIWSPY */
-	(iw_handler) NULL,						/* SIOCSIWTHRSPY */
-	(iw_handler) NULL,						/* SIOCGIWTHRSPY */
-#else /* WIRELESS_EXT > 15 */
+	(iw_handler) NULL,						/* SIOCSIWPRIV */
+	(iw_handler) NULL,						/* SIOCGIWPRIV */
+	(iw_handler) NULL,						/* SIOCSIWSTATS */
+	(iw_handler) NULL,						/* SIOCGIWSTATS */
 	(iw_handler) NULL,						/* SIOCSIWSPY */
 	(iw_handler) NULL,						/* SIOCGIWSPY */
+	iw_handler_set_thrspy,					/* SIOCSIWTHRSPY */
+	iw_handler_get_thrspy,					/* SIOCGIWTHRSPY */
+	iw_handler_set_spy,						/* SIOCSIWSPY */
+	iw_handler_get_spy,						/* SIOCGIWSPY */
 	(iw_handler) NULL,						/* -- hole -- */
 	(iw_handler) NULL,						/* -- hole -- */
-#endif /* WIRELESS_EXT > 15 */
 	(iw_handler) iw_ioctl_siwap,			/* SIOCSIWAP */
 	(iw_handler) iw_ioctl_giwap,			/* SIOCGIWAP */
-#if WIRELESS_EXT > 17
 	(iw_handler) iw_ioctl_siwmlme,			/* SIOCSIWMLME */
-#else /* WIRELESS_EXT > 17 */
 	(iw_handler) NULL,				/* -- hole -- */
-#endif /* WIRELESS_EXT > 17 */
-	(iw_handler) iw_ioctl_giwaplist,		/* SIOCGIWAPLIST */
+	(iw_handler) iw_ioctl_giwaplist,		/* SIOCGIWAPLIST - Deprecated */
 	(iw_handler) iw_ioctl_siwscan,			/* SIOCSIWSCAN */
 	(iw_handler) iw_ioctl_giwscan,			/* SIOCGIWSCAN */
 	(iw_handler) iw_ioctl_siwessid,			/* SIOCSIWESSID */
@@ -1860,7 +1878,6 @@ static const iw_handler ti_handler[] =
 	(iw_handler) iw_ioctl_giwencode,		/* SIOCGIWENCODE */
 	(iw_handler) iw_ioctl_siwpower,			/* SIOCSIWPOWER */
 	(iw_handler) iw_ioctl_giwpower,			/* SIOCGIWPOWER */
-#if WIRELESS_EXT > 17
 	(iw_handler) NULL,						/* -- hole -- */
 	(iw_handler) NULL,						/* -- hole -- */
 	(iw_handler) iw_ioctl_siwgenie,			/* SIOCSIWGENIE */
@@ -1871,7 +1888,6 @@ static const iw_handler ti_handler[] =
 	(iw_handler) iw_ioctl_giwencodeext,		/* SIOCGIWENCODEEXT */
 	(iw_handler) NULL,						/* SIOCSIWPMKSA */
 	(iw_handler) NULL,						/* -- hole -- */
-#endif /* WIRELESS_EXT > 17 */
 };
 
 #if 0
@@ -1902,5 +1918,5 @@ static const struct iw_handler_def ti_iw_handler_def =
 
 void tiwlan_iwhandler_init(struct net_device *dev)
 {
-   dev->wireless_handlers = (struct iw_handler_def *) &ti_iw_handler_def;	
+   dev->wireless_handlers = (struct iw_handler_def *) &ti_iw_handler_def;
 }
-- 
1.6.3.1

